{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactApp\\\\tute1\\\\src\\\\index.js\";\n//var React = require(\"react\"); //require react\n//var ReactDOM = require(\"react-dom\"); // use react dom to render html element\nimport React from \"react\"; //es6\n\nimport ReactDOM from \"react-dom\"; // es6\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst flname = \"react app\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" hello \", flname, \"!!!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: `My first name is ${flname}. Sum of 44 and 55 is ${44 + 55}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"lorem ipsome \", 5 + 6]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true), // react.fragment's syntactic sugar form\ndocument.getElementById(\"root\"));","map":{"version":3,"sources":["E:/reactApp/tute1/src/index.js"],"names":["React","ReactDOM","flname","render","document","getElementById"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAC3B,OAAOC,QAAP,MAAqB,WAArB,C,CAAkC;;;;AAElC,MAAMC,MAAM,GAAG,WAAf;AACAD,QAAQ,CAACE,MAAT,eACE;AAAA,0BACE;AAAA,0BAAYD,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA,cAAM,oBAAmBA,MAAO,yBAAwB,KAAK,EAAG;AAAhE;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE;AAAA,gCAAiB,IAAI,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAAA,gBADF,EAKO;AAELE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPF","sourcesContent":["//var React = require(\"react\"); //require react\n//var ReactDOM = require(\"react-dom\"); // use react dom to render html element\n\nimport React from \"react\"; //es6\nimport ReactDOM from \"react-dom\"; // es6\n\nconst flname = \"react app\";\nReactDOM.render(\n  <>\n    <h1> hello {flname}!!!</h1>\n    <h2>{`My first name is ${flname}. Sum of 44 and 55 is ${44 + 55}`}</h2>\n    <p>lorem ipsome {5 + 6}</p>\n  </>, // react.fragment's syntactic sugar form\n\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}